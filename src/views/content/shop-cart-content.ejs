<section class="shop-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="shop__cart__table">
                    <table id="cart-items-table">
                        <thead>
                            <tr>
                                <th>Producto</th>
                                <th>Precio</th>
                                <th>Cantidad</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Aquí se insertarán los productos del carrito -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="cart__btn">
                    <a href="/shop">Continuar comprando</a>
                </div>

            </div>
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="cart__btn update__btn">


                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">

            </div>
            <div class="col-lg-4 offset-lg-2">
                <div class="cart__total__procced">
                    <h6>Total del carrito</h6>
                    <ul>
                        <li>Subtotal <span id="subtotal"></span></li>
                        <li>Total <span id="total"></span></li>
                    </ul>

                    <!-- En la vista shop-cart -->
                    <form id="checkoutForm">
                        <input type="hidden" name="userID" value="{{ userID }}">
                        <input type="hidden" name="carritoID" value="{{ carritoID }}">
                        <button type="button" id="checkoutButton">Realizar Compra</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const table = document.getElementById('#cart-items-table')
        const table_rows = table.getElementsByTagName('tr')
        table_rows.forEach(element => {
            console.log(element)
        });
    })

    document.getElementById("checkoutButton").addEventListener("click", function () {
        // Obtener los valores de userID y carritoID
        const userID = document.querySelector('input[name="userID"]').value;
        const carritoID = document.querySelector('input[name="carritoID"]').value;

        // Redirigir a la página de checkout con los parámetros en la URL
        window.location.href = `/checkout`;
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Calcular el total del carrito
        function calcularTotalCarrito() {
            // Obtener los productos en el carrito y calcular el total
            fetch('/productos-carrito')
                .then(response => response.json())
                .then(productos => {
                    let subtotal = 0;

                    // Calcular el subtotal sumando el precio total de cada producto en el carrito
                    productos.forEach(producto => {
                        subtotal += producto.precio * producto.cantidad;
                    });

                    // Actualizar el subtotal en el DOM
                    document.getElementById('subtotal').textContent = `₡${subtotal.toFixed(2)}`;

                    // Calcular el total sumando el subtotal y los impuestos, si corresponde
                    const total = subtotal; // Aquí puedes agregar impuestos o gastos de envío, si corresponde

                    // Actualizar el total en el DOM
                    document.getElementById('total').textContent = `₡${total.toFixed(2)}`;

                    // Renderizar el botón de PayPal con el total del carrito
                    renderizarBotonPayPal(total);
                })
                .catch(error => console.error('Error al obtener productos del carrito: ', error));
        }
        // Llamar a la función para calcular el total del carrito cuando el contenido del DOM esté completamente cargado
        calcularTotalCarrito();
    });
</script>