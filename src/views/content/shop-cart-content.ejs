<!-- Breadcrumb Begin -->
<section class="shop-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="shop__cart__table">
                    <table id="cart-items-table">
                        <thead>
                            <tr>
                                <th>Producto</th>
                                <th>Precio</th>
                                <th>Cantidad</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Aquí se insertarán los productos del carrito -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="cart__btn">
                    <a href="/shop">Continuar comprando</a>
                </div>

            </div>
            <div class="col-lg-6 col-md-6 col-sm-6">
                <div class="cart__btn update__btn">
                    <a href="#"><span class="icon_loading"></span> Actualizar carrito</a>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6">
                <div class="discount__content">
                    <h6>Codigos de descuento</h6>
                    <form action="#">
                        <input type="text" placeholder="Enter your coupon code">
                        <button type="submit" class="site-btn">Apply</button>
                    </form>
                </div>
            </div>
            <div class="col-lg-4 offset-lg-2">
                <div class="cart__total__procced">
                    <h6>Total del carrito</h6>
                    <ul>
                        <li>Subtotal <span id="subtotal"></span></li>
                        <li>Total <span id="total"></span></li>
                    </ul>
                    <div id="paypal-button-container"></div>
                </div>
            </div>
        </div>
    </div>
</section>
<script
    src="https://www.paypal.com/sdk/js?client-id=AYDLBJ6oY26-b_3oR053TzHfIlGWD0FujibS7frrNIbhmPZCelMMzeKQq4DZPTVTv3MRKIMI15pq-OWW"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Calcular el total del carrito
        function calcularTotalCarrito() {
            // Obtener los productos en el carrito y calcular el total
            fetch('/productos-carrito')
                .then(response => response.json())
                .then(productos => {
                    let subtotal = 0;

                    // Calcular el subtotal sumando el precio total de cada producto en el carrito
                    productos.forEach(producto => {
                        subtotal += producto.precio * producto.cantidad;
                    });

                    // Actualizar el subtotal en el DOM
                    document.getElementById('subtotal').textContent = `$${subtotal.toFixed(2)}`;

                    // Calcular el total sumando el subtotal y los impuestos, si corresponde
                    const total = subtotal; // Aquí puedes agregar impuestos o gastos de envío, si corresponde

                    // Actualizar el total en el DOM
                    document.getElementById('total').textContent = `$${total.toFixed(2)}`;

                    // Renderizar el botón de PayPal con el total del carrito
                    renderizarBotonPayPal(total);
                })
                .catch(error => console.error('Error al obtener productos del carrito: ', error));
        }

        // Función para renderizar el botón de PayPal con el total del carrito
        function renderizarBotonPayPal(total) {
            paypal.Buttons({
                style: {
                    color: 'blue',
                    shape: 'pill',
                    label: 'pay',
                },
                createOrder: function (data, actions) {
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                value: total // Aquí se pasa el total del carrito como el valor del amount
                            }
                        }]
                    });
                },
                onApprove: function (data, actions) {
                    alert("Pago Realizado");
                    actions.order.capture().then(function (details) {
                        console.log(details);

                        window.location.href = "index.html";
                    });
                },
                onCancel: function (data) {
                    alert("Pago Cancelado");
                }
            }).render('#paypal-button-container');
        }

        // Llamar a la función para calcular el total del carrito cuando el contenido del DOM esté completamente cargado
        calcularTotalCarrito();
    });
</script>